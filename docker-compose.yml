version: '3.8'

services:
# Kafka cluster 1 - Source
  zookeeper1:
    image: confluentinc/cp-zookeeper:7.3.2
    hostname: zookeeper1
    container_name: zookeeper1
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - cluster1
      - cluster2

  kafka1:
    image: confluentinc/cp-kafka:7.3.2
    hostname: kafka1
    container_name: kafka1
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka1:19092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092,DOCKER://host.docker.internal:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper1:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper1
    networks:
      - cluster1
      - cluster2

# Kafka cluster 2 - Destination/Target
  zookeeper2:
    image: confluentinc/cp-zookeeper:7.3.2
    hostname: zookeeper2
    container_name: zookeeper2
    ports:
      - "2182:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - cluster1
      - cluster2

  kafka2:
    image: confluentinc/cp-kafka:7.3.2
    hostname: kafka2
    container_name: kafka2
    ports:
      - "9093:9092"
      - "29093:29092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka2:19092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9093,DOCKER://host.docker.internal:29093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper2:2181"
      KAFKA_BROKER_ID: 2
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper2
    networks:
      - cluster1
      - cluster2

  mirrormaker2:
    image: confluentinc/cp-kafka-connect:7.3.2
    container_name: mirrormaker2
    environment:
      - CONNECT_BOOTSTRAP_SERVERS=kafka1:19092,kafka2:19092
      - CONNECT_GROUP_ID=mirror-maker-group
      - CONNECT_CONFIG_STORAGE_TOPIC=mm2-configs
      - CONNECT_OFFSET_STORAGE_TOPIC=mm2-offsets
      - CONNECT_STATUS_STORAGE_TOPIC=mm2-status
      - CONNECT_KEY_CONVERTER=org.apache.kafka.connect.json.JsonConverter
      - CONNECT_VALUE_CONVERTER=org.apache.kafka.connect.json.JsonConverter
      - CONNECT_INTERNAL_KEY_CONVERTER=org.apache.kafka.connect.json.JsonConverter
      - CONNECT_INTERNAL_VALUE_CONVERTER=org.apache.kafka.connect.json.JsonConverter
      - CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR=1
      - CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR=1
      - CONNECT_STATUS_STORAGE_REPLICATION_FACTOR=1
      - CONNECT_REST_ADVERTISED_HOST_NAME=mirrormaker2
      - CONNECT_MIRRORMAKER_CLUSTER_ALIAS=cluster1,cluster2
      - replication.policy.class=org.apache.kafka.connect.mirror.DefaultReplicationPolicy
      - replication.factor=1
      - sync.topic.configs.enabled=true
      - sync.topic.acls.enabled=true
      - topics=.*
      - groups=.*
      - heartbeat.interval.ms=3000
      - refresh.topics.interval.seconds=600
    ports:
      - "8084:8083"
    depends_on:
      - kafka1
      - kafka2
    networks:
      - cluster1
      - cluster2

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: cluster1
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka1:19092
      KAFKA_CLUSTERS_1_NAME: cluster2
      KAFKA_CLUSTERS_1_BOOTSTRAPSERVERS: kafka2:19092
    depends_on:
      - kafka1
      - kafka2
    networks:
      - cluster1
      - cluster2

networks:
  cluster1:
    driver: bridge
  cluster2:
    driver: bridge